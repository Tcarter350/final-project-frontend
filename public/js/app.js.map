{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js","js/router.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","MainController","$rootScope","logout","secureState","e","toState","toParams","main","message","isAuthenticated","protectedStates","includes","name","parseFloat","id","getPayload","preventDefault","isLoggedIn","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","User","$resource","update","method","UsersIndexController","usersIndex","all","query","UsersShowController","deleteUser","usersShow","$remove","isCurrentUser","Number","params","get","delete","UsersEditController","usersEdit","$update","angular","module","constant","config","$inject","factory"],"mappings":"YAKA,SAASA,MAAKC,EAAeC,GAC3BD,EAAcE,SAAcD,EAA5B,SACAD,EAAcG,UAAeF,EAA7B,YAEAD,EAAcI,YAAc,GCJ9B,QAASC,oBAAmBC,EAAOC,GAKjC,QAASC,KACPF,EAAMG,OAAOC,EAASC,MACnBC,KAAK,WACJL,EAAOM,GAAG,WAPhB,GAAMH,GAAWI,IAEjBJ,GAASC,QASTD,EAASF,OAASA,EAIpB,QAASO,iBAAgBT,EAAOC,GAK9B,QAASC,KACPF,EAAMU,MAAMA,EAAMC,aACfL,KAAK,WACJL,EAAOM,GAAG,gBAPhB,GAAMG,GAAQF,IAEdE,GAAMC,eASND,EAAMR,OAASA,EC9BjB,QAASU,gBAAeZ,EAAOC,EAAQY,GAIrC,QAASC,KACPd,EAAMc,SACLR,KAAK,WACJL,EAAOM,GAAG,gBAId,QAASQ,GAAYC,EAAGC,EAASC,GAC/BC,EAAKC,QAAU,OACVpB,EAAMqB,mBACXC,EAAgBC,SAASN,EAAQO,OAChB,cAAjBP,EAAQO,MAAyBC,WAAWP,EAASQ,MAAQ1B,EAAM2B,aAAaD,MAC9EV,EAAEY,iBACF3B,EAAOM,GAAG,SACVY,EAAKC,QAAU,sCAjBnB,GAAMD,GAAOX,IACbW,GAAKU,WAAa7B,EAAMqB,gBACxBF,EAAKC,QAAU,IAOf,IAAME,IAAmB,YAAa,WAWtCT,GAAWiB,IAAI,oBAAqBf,GACpCI,EAAKL,OAASA,ECrBhB,QAASiB,QAAOC,EAAgBC,GAC9BD,EACIE,MAAM,cACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,uCAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAEbH,MAAM,aACLC,IAAK,aACLC,YAAa,2BACbC,WAAY,qCAEbH,MAAM,aACLC,IAAK,kBACLC,YAAa,2BACbC,WAAY,qCAEjBJ,EAAmBK,UAAU,UC3B/B,QAASC,MAAKC,EAAW7C,GACvB,MAAO,IAAI6C,GAAa7C,EAAjB,cAAwC+B,GAAI,QACjDe,QAAUC,OAAQ,SCDtB,QAASC,sBAAqBJ,GAC5B,GAAMK,GAAapC,IACnBoC,GAAWC,IAAMN,EAAKO,QAGxB,QAASC,qBAAoBR,EAAMtC,EAAQD,GAGzC,QAASgD,KACPC,EAAU5C,KAAK6C,QAAQ,WACrBjD,EAAOM,GAAG,gBAId,QAAS4C,KACP,MAAOnD,GAAM2B,aAAaD,KAAO0B,OAAOnD,EAAOoD,OAAO3B,IATxD,GAAMuB,GAAYzC,IAClByC,GAAU5C,KAAOkC,EAAKe,IAAIrD,EAAOoD,QAWjCJ,EAAUE,cAAgBA,EAC1BF,EAAUM,OAASP,EACnBC,EAAUpB,WAAa7B,EAAMqB,gBAG/B,QAASmC,qBAAoBjB,EAAMtC,GAGjC,QAASwC,KACPgB,EAAUpD,KAAKqD,QAAQ,WACrBzD,EAAOM,GAAG,YAAaN,EAAOoD,UAJlC,GAAMI,GAAYjD,IAClBiD,GAAUpD,KAAOkC,EAAKe,IAAIrD,EAAOoD,QAMjC7C,KAAKiC,OAASA,ELpChBkB,QAAQC,OAAO,gBAAiB,aAAc,YAAa,eACxDC,SAAS,UAAW,6BACpBC,OAAOrE,MAEVA,KAAKsE,SAAW,gBAAiB,WCJjCJ,QAAQC,OAAO,gBACZvB,WAAW,qBAAsBtC,oBACjCsC,WAAW,kBAAmB5B,iBAEjCV,mBAAmBgE,SAAW,QAAS,UAgBvCtD,gBAAgBsD,SAAW,QAAS,UCpBpCJ,QAAQC,OAAO,gBACdvB,WAAW,iBAAkBzB,gBAC9BA,eAAemD,SAAW,QAAS,SAAU,cCF7CJ,QAAQC,OAAO,gBACbE,OAAO/B,QAETA,OAAOgC,SAAW,iBAAkB,sBCHpCJ,QAAQC,OAAO,gBACZI,QAAQ,OAAQzB,MAEnBA,KAAKwB,SAAW,YAAa,WCH7BJ,QAAQC,OAAO,gBACZvB,WAAW,uBAAwBM,sBACnCN,WAAW,sBAAuBU,qBAClCV,WAAW,sBAAuBmB,qBACrCb,qBAAqBoB,SAAW,QAKhChB,oBAAoBgB,SAAW,OAAQ,SAAU,SAkBjDP,oBAAoBO,SAAW,OAAQ","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n.controller('MainController', MainController);\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('usersIndex');\n    });\n  }\n  const protectedStates = ['usersEdit', 'usersNew'];\n  function secureState(e, toState, toParams) {\n    main.message = null;\n    if((!$auth.isAuthenticated() &&\n    protectedStates.includes(toState.name)) ||\n    toState.name === 'usersEdit' && (parseFloat(toParams.id) !== $auth.getPayload().id)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n    }\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n  main.logout = logout;\n}\n","angular.module('finalProject')\n .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n     .state('usersIndex', {\n       url: '/users',\n       templateUrl: '/templates/usersIndex.html',\n       controller: 'UsersIndexController as usersIndex'\n     })\n     .state('register', {\n       url: '/register',\n       templateUrl: '/templates/register.html',\n       controller: 'RegisterController as register'\n     })\n     .state('login', {\n       url: '/login',\n       templateUrl: '/templates/login.html',\n       controller: 'LoginController as login'\n     })\n     .state('usersShow', {\n       url: '/users/:id',\n       templateUrl: 'templates/usersShow.html',\n       controller: 'UsersShowController as usersShow'\n     })\n     .state('usersEdit', {\n       url: '/users/:id/edit',\n       templateUrl: 'templates/usersEdit.html',\n       controller: 'UsersEditController as usersEdit'\n     });\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n  usersIndex.all = User.query();\n}\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n  usersShow.user = User.get($state.params);\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  function isCurrentUser() {\n    return $auth.getPayload().id === Number($state.params.id);\n  }\n\n  usersShow.isCurrentUser = isCurrentUser;\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n}\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n  usersEdit.user = User.get($state.params);\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n  this.update = update;\n}\n"]}