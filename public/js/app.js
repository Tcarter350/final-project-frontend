"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix=""}function RegisterController(e,t,o){function r(){e.signup(n.user).then(function(r){o.localStorage.setItem("token",r.data.token);var n=e.getPayload().id;t.go("usersShow",{id:n})})}var n=this;n.user={},n.submit=r}function LoginController(e,t){function o(){e.login(r.credentials).then(function(){var o=e.getPayload().id;t.go("usersShow",{id:o})})}var r=this;r.credentials={},r.submit=o}function CategoriesIndexController(e){var t=this;t.all=e.query()}function CategoriesShowController(e,t){var o=this;o.category=e.get(t.params)}function Category(e,t){return new e(t+"/categories/:id",{id:"@id"},{update:{method:"PUT"}})}function dragDrop(){var e=new FileReader;return{restrict:"E",replace:!0,templateUrl:"templates/dragDrop.html",scope:{base64:"="},link:function(t,o){t.base64=null,t.active=!1,e.onload=function(){t.base64=e.result,t.$apply()},o.on("dragover",function(){t.active=!0,t.$apply()}).on("dragover",function(e){e.preventDefault()}).on("dragleave",function(){t.active=!1,t.$apply()}).on("drop",function(t){t.preventDefault();var o=(t.target.files||t.dataTransfer.files)[0];e.readAsDataURL(o)})}}}function MainController(e,t,o){function r(){e.logout().then(function(){t.go("postsIndex")})}function n(){var o=e.getPayload().id;t.go("usersShow",{id:o})}function s(o,r,n){l.message=null,l.loginVisible=!1,l.registerVisible=!1,(!e.isAuthenticated()&&i.includes(r.name)||"usersEdit"===r.name&&parseFloat(n.id)!==e.getPayload().id)&&(o.preventDefault(),t.go("login"),l.message="You must be logged in to go there!")}var l=this;l.isLoggedIn=e.isAuthenticated,l.message=null,l.loginVisible=!1,l.registerVisible=!1;var i=["usersEdit","usersNew"];o.$on("$stateChangeStart",s),l.logout=r,l.getUserId=n}function Post(e,t){return new e(t+"/posts/:id",{id:"@id"},{update:{method:"PUT"}})}function PostsIndexController(e){var t=this;t.all=e.query()}function PostsShowController(e,t,o,r){function n(){o.save(i.newSuggestion,function(){i.newSuggestion={post_id:t.params.id},i.post=e.get(t.params),i.formVisible=!1})}function s(){i.post.$remove(function(){t.go("postsIndex")})}function l(e){console.log(e),o.delete(e,function(){var t=i.post.suggestions.indexOf(e);i.post.suggestions.splice(t,1)})}var i=this;i.formVisible=!1,i.newSuggestion={post_id:t.params.id},e.get(t.params).$promise.then(function(e){i.post=e,r.isAuthenticated()&&(i.postOwner=r.getPayload().id===i.post.user.id)}),i.createSuggestion=n,i.deleteSuggestion=l,i.deletePost=s}function Router(e,t){e.state("usersShow",{url:"/users/:id",templateUrl:"templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("postsIndex",{url:"/posts",templateUrl:"/templates/postsIndex.html",controller:"PostsIndexController as postsIndex"}).state("postsShow",{url:"/posts/:id",templateUrl:"/templates/postsShow.html",controller:"PostsShowController as postsShow"}).state("categoriesShow",{url:"/categories/:id",templateUrl:"/templates/categoriesShow.html",controller:"CategoriesShowController as categoriesShow"}).state("categoriesIndex",{url:"/categories",templateUrl:"/templates/categoriesIndex.html",controller:"CategoriesIndexController as categoriesIndex"}),t.otherwise("/posts")}function Suggestion(e,t){return new e(t+"/suggestions/:id",{id:"@id"},{update:{method:"PUT"}})}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}function UsersShowController(e,t,o,r){function n(){i.user.$remove(function(){o.logout().then(function(){t.go("postsIndex")})})}function s(){if(o.isAuthenticated())return o.getPayload().id===Number(t.params.id)}function l(){r.save(i.newPost,function(){i.newPost={user_id:t.params.id},i.user=e.get(t.params),i.postformVisible=!1})}var i=this;i.postformVisible=!1,i.editformVisible=!1,i.user=e.get(t.params),i.isCurrentUser=s,i.delete=n,i.isLoggedIn=o.isAuthenticated,i.newPost={user_id:t.params.id},i.user=e.get(t.params),i.createPost=l}function UsersEditController(e,t){function o(){r.user.$update(function(){t.go("usersShow",t.params)})}var r=this;r.user=e.get(t.params),this.update=o}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state","$window"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").controller("CategoriesIndexController",CategoriesIndexController).controller("CategoriesShowController",CategoriesShowController),CategoriesIndexController.$inject=["Category"],CategoriesShowController.$inject=["Category","$state"],angular.module("finalProject").factory("Category",Category),Category.$inject=["$resource","API_URL"],angular.module("finalProject").directive("dragDrop",dragDrop),angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("finalProject").factory("Post",Post),Post.$inject=["$resource","API_URL"],angular.module("finalProject").controller("PostsIndexController",PostsIndexController).controller("PostsShowController",PostsShowController),PostsIndexController.$inject=["Post"],PostsShowController.$inject=["Post","$state","Suggestion","$auth"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").factory("Suggestion",Suggestion),Suggestion.$inject=["$resource","API_URL"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersShowController.$inject=["User","$state","$auth","Post"],UsersEditController.$inject=["User","$state"];
//# sourceMappingURL=app.js.map
